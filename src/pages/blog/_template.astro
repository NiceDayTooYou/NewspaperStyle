---
import Layout from '@/layouts/layout.astro';
import { getAllTopics, getSortedPosts, type GetAllTopics, type GetSortedPosts } from '@/libs/content';
import * as Card from '@/ui/card';
import Chip from '@/ui/chip.astro';
import Date from '@/ui/date.astro';
import Icon from '@/ui/icon.astro';
import Separator from '@/ui/separator.astro';
import Text from '@/ui/text.astro';
import { db, PostView, sum } from 'astro:db';
import PostsSearch from './_search.astro';

type Props = { posts?: GetSortedPosts; topic?: GetAllTopics[0]['id'] };

const [rs] = await db.select({ views: sum(PostView.views) }).from(PostView);
const views = Intl.NumberFormat('en', { notation: 'compact', maximumFractionDigits: 1 }).format(Number(rs?.views ?? 0));

const posts = await getSortedPosts();
const topics = await getAllTopics();
---

<Layout title="Blog | Christian Penrod" class="mx-auto lg:max-w-screen-xl lg:px-20">
  <section>
    <Text as="h1">BLOG POSTS</Text>
    <Text as="h2" class="text-foreground-2 text-sm">Explore various sofware-related posts.</Text>
  </section>
  <Separator class="mt-4 mb-8 lg:mb-12" />
  <div class="grid gap-10 lg:grid-cols-[1fr_30%] xl:gap-20">
    <section class="flex flex-col gap-6">
      <div class="flex items-center gap-4">
        <Text as="h3" class="text-foreground-2">ALL POSTS</Text>
        <Separator class="flex-1" />
        <div class="text-foreground-2 flex items-center text-xs">
          <Text>{views} Views</Text>
          <Icon name="dot" />
          <Text>{posts.length} Posts</Text>
        </div>
      </div>
      <div class="flex flex-col gap-6">
        <div class="border-border flex flex-col gap-4 rounded border p-4 text-xs shadow-sm">
          <PostsSearch />
          <fieldset class="flex flex-wrap gap-2">
            {
              topics
                .map((topic) => ({ ...topic, active: Astro.props.topic === topic.id }))
                .map(({ id, value, active }) => (
                  <Chip name="topics" {value} href={active ? '/blog' : `/blog/${id}`} icon={active ? 'x' : undefined} />
                ))
            }
          </fieldset>
        </div>
        <ul>
          {
            (Astro.props.posts ?? posts).map((post) => (
              <li>
                <a
                  href={`/blog/${post.id}`}
                  aria-label={post.data.title}
                  class:list={[
                    'group flex flex-col rounded py-2 text-xs',
                    'sm:flex-row sm:items-center sm:justify-between sm:gap-2',
                    'focus-visible:ring-ring focus-visible:ring-1 focus-visible:outline-none',
                  ]}
                >
                  <Text class="group-hover:text-brand motion-safe:transition-colors">{post.data.title}</Text>
                  <Separator class="flex-1" />
                  <div class="text-foreground-2 flex items-center">
                    <Date value={post.data.published} />
                    <Icon name="dot" />
                    <Text>{post.data.readingTime}</Text>
                  </div>
                </a>
                <Separator class="my-2 sm:hidden" />
              </li>
            ))
          }
        </ul>
      </div>
    </section>
    <section class="hidden flex-col gap-6 lg:flex">
      <Text as="h3" class="text-foreground-2">RECENT POSTS</Text>
      <ul class="flex flex-col gap-6">
        {
          posts.slice(0, 3).map((post) => (
            <li>
              <Card.Root as="a" href={`/blog/${post.id}`} aria-label={`${post.data.title}. ${post.data.description}`}>
                <Card.Header />
                <Card.Body>
                  <Text class="group-hover:text-brand text-sm motion-safe:transition-colors">{post.data.title}</Text>
                  <Text class="text-foreground-2 flex-1 text-xs">{post.data.description}</Text>
                </Card.Body>
                <Card.Footer>
                  <div class="text-foreground-2 flex items-center gap-2">
                    <Icon name="calendar" class="size-3.5" />
                    <Date value={post.data.published} />
                  </div>
                  <div class="text-foreground-2 flex items-center gap-2">
                    <Icon name="clock-4" class="size-3.5" />
                    <Text>{post.data.readingTime}</Text>
                  </div>
                </Card.Footer>
              </Card.Root>
            </li>
          ))
        }
      </ul>
    </section>
  </div>
</Layout>
